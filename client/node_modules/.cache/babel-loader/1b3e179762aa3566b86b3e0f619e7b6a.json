{"ast":null,"code":"export const cartReducer = (state = {\n  cartItems: []\n}, action) => {\n  switch (action.type) {\n    case \"ADD_TO_CART\":\n      const alreadyExists = state.cartItems.find(item => item._id === action.payload._id);\n\n      if (alreadyExists) {\n        return { ...state,\n          cartItems: state.cartItems.map(item => item._id === action.payload._id ? action.payload : item)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, action.payload]\n        };\n      }\n\n    case \"DELETE_FROM_CART\":\n      return { ...state,\n        cartItems: state.cartItems.filter(item => item._id !== action.payload._id)\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/amanrana/Desktop/Project1/pizza-shop/client/src/reducers/cartReducer.js"],"names":["cartReducer","state","cartItems","action","type","alreadyExists","find","item","_id","payload","map","filter"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,CAACC,KAAK,GAAG;AAAEC,EAAAA,SAAS,EAAE;AAAb,CAAT,EAA4BC,MAA5B,KAAuC;AAChE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACE,YAAMC,aAAa,GAAGJ,KAAK,CAACC,SAAN,CAAgBI,IAAhB,CACnBC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACM,OAAP,CAAeD,GADlB,CAAtB;;AAGA,UAAIH,aAAJ,EAAmB;AACjB,eAAO,EACL,GAAGJ,KADE;AAELC,UAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBQ,GAAhB,CAAqBH,IAAD,IAC7BA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACM,OAAP,CAAeD,GAA5B,GAAkCL,MAAM,CAACM,OAAzC,GAAmDF,IAD1C;AAFN,SAAP;AAMD,OAPD,MAOO;AACL,eAAO,EACL,GAAGN,KADE;AAELC,UAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBC,MAAM,CAACM,OAA5B;AAFN,SAAP;AAID;;AACH,SAAK,kBAAL;AACE,aAAO,EACL,GAAGR,KADE;AAELC,QAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBS,MAAhB,CACRJ,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACM,OAAP,CAAeD,GAD7B;AAFN,OAAP;;AAOF;AACE,aAAOP,KAAP;AA3BJ;AA6BD,CA9BM","sourcesContent":["export const cartReducer = (state = { cartItems: [] }, action) => {\n  switch (action.type) {\n    case \"ADD_TO_CART\":\n      const alreadyExists = state.cartItems.find(\n        (item) => item._id === action.payload._id\n      );\n      if (alreadyExists) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map((item) =>\n            item._id === action.payload._id ? action.payload : item\n          ),\n        };\n      } else {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, action.payload],\n        };\n      }\n    case \"DELETE_FROM_CART\":\n      return {\n        ...state,\n        cartItems: state.cartItems.filter(\n          (item) => item._id !== action.payload._id\n        ),\n      };\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}