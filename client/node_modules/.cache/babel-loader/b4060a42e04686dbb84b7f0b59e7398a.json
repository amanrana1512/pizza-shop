{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { getAllPizzaReducer } from \"./reducers/pizzaReducer\";\nimport { cartReducer } from \"./reducers/cartReducer\";\nimport { registerUserReducer, loginUserReducer } from \"./reducers/userReducer\";\nconst currentUser = localStorage.getItem(\"currentItem\") ? JSON.parse(localStorage.getItem(\"currentUser\")) : null;\nconst rootReducer = combineReducers({\n  getAllPizzaReducer: getAllPizzaReducer,\n  cartReducer: cartReducer,\n  registerUserReducer: registerUserReducer,\n  loginUserReducer: loginUserReducer\n});\nconst cartItems = localStorage.getItem(\"cartItem\") ? JSON.parse(localStorage.getItem(\"cartItem\")) : [];\nconst initialState = {\n  cartReducer: {\n    cartItems: cartItems\n  },\n  loginUserReducer: {\n    currentUser: currentUser\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/amanrana/Desktop/Project1/pizza-shop/client/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","getAllPizzaReducer","cartReducer","registerUserReducer","loginUserReducer","currentUser","localStorage","getItem","JSON","parse","rootReducer","cartItems","initialState","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,kBAAT,QAAmC,yBAAnC;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,mBAAT,EAA8BC,gBAA9B,QAAsD,wBAAtD;AAEA,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,aAArB,IAChBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CADgB,GAEhB,IAFJ;AAGA,MAAMG,WAAW,GAAGb,eAAe,CAAC;AAClCI,EAAAA,kBAAkB,EAAEA,kBADc;AAElCC,EAAAA,WAAW,EAAEA,WAFqB;AAGlCC,EAAAA,mBAAmB,EAAEA,mBAHa;AAIlCC,EAAAA,gBAAgB,EAAEA;AAJgB,CAAD,CAAnC;AAOA,MAAMO,SAAS,GAAGL,YAAY,CAACC,OAAb,CAAqB,UAArB,IACdC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADc,GAEd,EAFJ;AAIA,MAAMK,YAAY,GAAG;AACnBV,EAAAA,WAAW,EAAE;AACXS,IAAAA,SAAS,EAAEA;AADA,GADM;AAInBP,EAAAA,gBAAgB,EAAE;AAChBC,IAAAA,WAAW,EAAEA;AADG;AAJC,CAArB;AAQA,MAAMQ,UAAU,GAAG,CAACd,KAAD,CAAnB;AAEA,MAAMe,KAAK,GAAGlB,WAAW,CACvBc,WADuB,EAEvBE,YAFuB,EAGvBZ,mBAAmB,CAACF,eAAe,CAAC,GAAGe,UAAJ,CAAhB,CAHI,CAAzB;AAKA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { getAllPizzaReducer } from \"./reducers/pizzaReducer\";\nimport { cartReducer } from \"./reducers/cartReducer\";\nimport { registerUserReducer, loginUserReducer } from \"./reducers/userReducer\";\n\nconst currentUser = localStorage.getItem(\"currentItem\")\n  ? JSON.parse(localStorage.getItem(\"currentUser\"))\n  : null;\nconst rootReducer = combineReducers({\n  getAllPizzaReducer: getAllPizzaReducer,\n  cartReducer: cartReducer,\n  registerUserReducer: registerUserReducer,\n  loginUserReducer: loginUserReducer,\n});\n\nconst cartItems = localStorage.getItem(\"cartItem\")\n  ? JSON.parse(localStorage.getItem(\"cartItem\"))\n  : [];\n\nconst initialState = {\n  cartReducer: {\n    cartItems: cartItems,\n  },\n  loginUserReducer: {\n    currentUser: currentUser,\n  }\n};\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\nexport default store;\n"]},"metadata":{},"sourceType":"module"}