{"ast":null,"code":"var _jsxFileName = \"/Users/amanrana/Desktop/Project1/pizza-shop/client/src/components/Admin/EditPizza.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form, Row, Col, Button } from \"react-bootstrap\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPizzaById, updatePizza } from \"../../action/pizzaAction\";\nimport Loader from \"../Loader\";\nimport Error from \"../Error\";\nimport Success from \"../Success\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditPizza = ({\n  match\n}) => {\n  _s();\n\n  const [name, setname] = useState(\"\");\n  const [smallPrice, setsmallPrice] = useState();\n  const [mediumPrice, setmediumPrice] = useState();\n  const [largePrice, setlargePrice] = useState();\n  const [image, setimage] = useState(\"\");\n  const [description, setdescription] = useState(\"\");\n  const [category, setcategory] = useState(\"\");\n  const getPizzaByState = useSelector(state => state.getPizzaByIdReducer);\n  const {\n    loading,\n    error,\n    pizza\n  } = getPizzaByState;\n  const updatePizzaState = useSelector(state => state.updatePizzaByIdReducer);\n  const {\n    updateloading,\n    updatesuccess,\n    updateerror\n  } = updatePizzaState;\n  const dispatch = useDispatch();\n\n  const submitForm = e => {\n    e.preventDefault();\n    const updatedpizza = {\n      _id: match.params.pizzaId,\n      name,\n      image,\n      description,\n      category,\n      Prices: {\n        small: smallPrice,\n        medium: mediumPrice,\n        large: largePrice\n      }\n    };\n    console.log(pizza);\n    dispatch(updatePizza(updatedpizza));\n  };\n\n  useEffect(() => {\n    if (pizza) {\n      if (pizza._id === match.params.pizzaId) {\n        setname(pizza.name);\n        setdescription(pizza.description);\n        setcategory(pizza.category);\n        setimage(pizza.image);\n        setsmallPrice(pizza.prices[0][\"small\"]);\n        setmediumPrice(pizza.prices[0][\"medium\"]);\n        setlargePrice(pizza.prices[0][\"large\"]);\n      } else {\n        console.log(pizza);\n        dispatch(getPizzaById(match.params.pizzaId));\n      }\n    } else {\n      dispatch(getPizzaById(match.params.pizzaId));\n    }\n  }, [pizza, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [updateloading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }, this), updateerror && /*#__PURE__*/_jsxDEV(Error, {\n      error: \"add new pizza error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitForm,\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: \"formGridEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: name,\n            onChange: e => setname(e.target.value),\n            placeholder: \"Enter name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"formGridCity\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Small Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: smallPrice,\n              onChange: e => setsmallPrice(e.target.value),\n              placeholder: \"Enter small price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"formGridState\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Medium Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: mediumPrice,\n              onChange: e => setmediumPrice(e.target.value),\n              placeholder: \"Enter medium price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"formGridZip\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Large Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: largePrice,\n              onChange: e => setlargePrice(e.target.value),\n              placeholder: \"Enter large price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: \"formGridPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: image,\n            onChange: e => setimage(e.target.value),\n            placeholder: \"Add Image URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formGridAddress1\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          value: description,\n          onChange: e => setdescription(e.target.value),\n          placeholder: \"Enter Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formGridAddress2\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          value: category,\n          onChange: e => setcategory(e.target.value),\n          placeholder: \"Enter Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditPizza, \"uYPqGK2WFIVMczD3ETKG47nbFUs=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = EditPizza;\nexport default EditPizza;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPizza\");","map":{"version":3,"sources":["/Users/amanrana/Desktop/Project1/pizza-shop/client/src/components/Admin/EditPizza.jsx"],"names":["React","useState","Form","Row","Col","Button","useEffect","useDispatch","useSelector","getPizzaById","updatePizza","Loader","Error","Success","EditPizza","match","name","setname","smallPrice","setsmallPrice","mediumPrice","setmediumPrice","largePrice","setlargePrice","image","setimage","description","setdescription","category","setcategory","getPizzaByState","state","getPizzaByIdReducer","loading","error","pizza","updatePizzaState","updatePizzaByIdReducer","updateloading","updatesuccess","updateerror","dispatch","submitForm","e","preventDefault","updatedpizza","_id","params","pizzaId","Prices","small","medium","large","console","log","prices","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Row, Col, Button } from \"react-bootstrap\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPizzaById, updatePizza } from \"../../action/pizzaAction\";\nimport Loader from \"../Loader\";\nimport Error from \"../Error\";\nimport Success from \"../Success\";\n\nconst EditPizza = ({ match }) => {\n  const [name, setname] = useState(\"\");\n  const [smallPrice, setsmallPrice] = useState();\n  const [mediumPrice, setmediumPrice] = useState();\n  const [largePrice, setlargePrice] = useState();\n  const [image, setimage] = useState(\"\");\n  const [description, setdescription] = useState(\"\");\n  const [category, setcategory] = useState(\"\");\n\n  const getPizzaByState = useSelector((state) => state.getPizzaByIdReducer);\n  const { loading, error, pizza } = getPizzaByState;\n  const updatePizzaState =useSelector(state=>state.updatePizzaByIdReducer);\n  const {updateloading,updatesuccess,updateerror}= updatePizzaState;\n\n  const dispatch = useDispatch();\n\n  const submitForm = (e) => {\n    e.preventDefault();\n    const updatedpizza = {\n      _id: match.params.pizzaId,\n      name,\n      image,\n      description,\n      category,\n      Prices: {\n        small: smallPrice,\n        medium: mediumPrice,\n        large: largePrice,\n      },\n    };\n    console.log(pizza);\n    dispatch(updatePizza(updatedpizza));\n  };\n\n  useEffect(() => {\n    if (pizza) {\n      if (pizza._id === match.params.pizzaId) {\n        setname(pizza.name);\n        setdescription(pizza.description);\n        setcategory(pizza.category);\n        setimage(pizza.image);\n        setsmallPrice(pizza.prices[0][\"small\"]);\n        setmediumPrice(pizza.prices[0][\"medium\"]);\n        setlargePrice(pizza.prices[0][\"large\"]);\n      } else {\n        console.log(pizza);\n        dispatch(getPizzaById(match.params.pizzaId));\n      }\n    } else {\n      dispatch(getPizzaById(match.params.pizzaId));\n    }\n  }, [pizza,dispatch]);\n  return (\n    <div>\n      {updateloading && <Loader />}\n      {updateerror && <Error error=\"add new pizza error\" />}\n      <Form onSubmit={submitForm}>\n        <Row className=\"mb-3\">\n          <Form.Group as={Col} controlId=\"formGridEmail\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              value={name}\n              onChange={(e) => setname(e.target.value)}\n              placeholder=\"Enter name\"\n            />\n          </Form.Group>\n          <Row className=\"mb-3\">\n            <Form.Group as={Col} controlId=\"formGridCity\">\n              <Form.Label>Small Price</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={smallPrice}\n                onChange={(e) => setsmallPrice(e.target.value)}\n                placeholder=\"Enter small price\"\n              />\n            </Form.Group>\n\n            <Form.Group as={Col} controlId=\"formGridState\">\n              <Form.Label>Medium Price</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={mediumPrice}\n                onChange={(e) => setmediumPrice(e.target.value)}\n                placeholder=\"Enter medium price\"\n              />\n            </Form.Group>\n\n            <Form.Group as={Col} controlId=\"formGridZip\">\n              <Form.Label>Large Price</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={largePrice}\n                onChange={(e) => setlargePrice(e.target.value)}\n                placeholder=\"Enter large price\"\n              />\n            </Form.Group>\n          </Row>\n\n          <Form.Group as={Col} controlId=\"formGridPassword\">\n            <Form.Label>Image</Form.Label>\n            <Form.Control\n              type=\"text\"\n              value={image}\n              onChange={(e) => setimage(e.target.value)}\n              placeholder=\"Add Image URL\"\n            />\n          </Form.Group>\n        </Row>\n\n        <Form.Group className=\"mb-3\" controlId=\"formGridAddress1\">\n          <Form.Label>Description</Form.Label>\n          <Form.Control\n            type=\"text\"\n            value={description}\n            onChange={(e) => setdescription(e.target.value)}\n            placeholder=\"Enter Description\"\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formGridAddress2\">\n          <Form.Label>Category</Form.Label>\n          <Form.Control\n            type=\"text\"\n            value={category}\n            onChange={(e) => setcategory(e.target.value)}\n            placeholder=\"Enter Category\"\n          />\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\">\n          Update\n        </Button>\n      </Form>{\" \"}\n    </div>\n  );\n};\n\nexport default EditPizza;\n"]},"metadata":{},"sourceType":"module"}