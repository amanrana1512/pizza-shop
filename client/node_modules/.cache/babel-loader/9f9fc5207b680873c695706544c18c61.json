{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { getAllPizzaReducer } from \"./reducers/pizzaReducer\";\nimport { cartReducer } from \"./reducers/cartReducer\";\nimport { registerUserReducer } from \"./reducers/userReducer\";\nconst rootReducer = combineReducers({\n  getAllPizzaReducer: getAllPizzaReducer,\n  cartReducer: cartReducer,\n  registerUserReducer: registerUserReducer\n});\nconst cartItems = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [];\nconst initialState = {\n  cartReducer: {\n    cartItems: cartItems\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/amanrana/Desktop/Project1/pizza-shop/client/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","getAllPizzaReducer","cartReducer","registerUserReducer","rootReducer","cartItems","localStorage","getItem","JSON","parse","initialState","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,kBAAT,QAAmC,yBAAnC;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,mBAAT,QAAoC,wBAApC;AAKA,MAAMC,WAAW,GAAGP,eAAe,CAAC;AAClCI,EAAAA,kBAAkB,EAAEA,kBADc;AAElCC,EAAAA,WAAW,EAAEA,WAFqB;AAGlCC,EAAAA,mBAAmB,EAAEA;AAHa,CAAD,CAAnC;AAMA,MAAME,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACdC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADc,GAEd,EAFJ;AAIA,MAAMG,YAAY,GAAG;AACnBR,EAAAA,WAAW,EAAE;AACXG,IAAAA,SAAS,EAAEA;AADA;AADM,CAArB;AAKA,MAAMM,UAAU,GAAG,CAACZ,KAAD,CAAnB;AAEA,MAAMa,KAAK,GAAGhB,WAAW,CACvBQ,WADuB,EAEvBM,YAFuB,EAGvBV,mBAAmB,CAACF,eAAe,CAAC,GAAGa,UAAJ,CAAhB,CAHI,CAAzB;AAKA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { getAllPizzaReducer } from \"./reducers/pizzaReducer\";\nimport { cartReducer } from \"./reducers/cartReducer\";\nimport { registerUserReducer } from \"./reducers/userReducer\";\n\n\n\n\nconst rootReducer = combineReducers({\n  getAllPizzaReducer: getAllPizzaReducer,\n  cartReducer: cartReducer,\n  registerUserReducer: registerUserReducer,\n});\n\nconst cartItems = localStorage.getItem(\"cartItems\")\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\n  : [];\n\nconst initialState = {\n  cartReducer: {\n    cartItems: cartItems,\n  },\n};\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\nexport default store;\n"]},"metadata":{},"sourceType":"module"}