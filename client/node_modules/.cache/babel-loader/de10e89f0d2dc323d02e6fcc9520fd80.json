{"ast":null,"code":"var _jsxFileName = \"/Users/amanrana/Desktop/Project1/pizza-shop/client/src/components/Admin/EditPizza.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form, Row, Col, Button } from \"react-bootstrap\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPizzaById } from \"../../action/pizzaAction\";\nimport Loader from \"../Loader\";\nimport Error from \"../Error\";\nimport Success from \"../Success\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditPizza = ({\n  match\n}) => {\n  _s();\n\n  const [name, setname] = useState(\"\");\n  const [smallPrice, setsmallPrice] = useState();\n  const [mediumPrice, setmediumPrice] = useState();\n  const [largePrice, setlargePrice] = useState();\n  const [image, setimage] = useState(\"\");\n  const [description, setdescription] = useState(\"\");\n  const [category, setcategory] = useState(\"\");\n  const getPizzaByState = useSelector(state => state.getPizzaByIdReducer);\n  const {\n    loading,\n    error,\n    pizza\n  } = getPizzaByState;\n  const dispatch = useDispatch();\n\n  const submitForm = e => {\n    e.preventDefault();\n    const editedpizza = {\n      name,\n      image,\n      description,\n      category,\n      Prices: {\n        small: smallPrice,\n        medium: mediumPrice,\n        large: largePrice\n      }\n    };\n    console.log(pizza); //dispatch(addPizzas(pizza));\n  };\n\n  useEffect(() => {\n    if (pizza._id === match.params.pizzaId) {\n      setname(pizza.name);\n    } else {\n      dispatch(getPizzaById(match.params.pizzaId));\n    }\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(Error, {\n      error: \"add new pizza error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitForm,\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: \"formGridEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: name,\n            onChange: e => setname(e.target.value),\n            placeholder: \"Enter name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"formGridCity\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Small Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: smallPrice,\n              onChange: e => setsmallPrice(e.target.value),\n              placeholder: \"Enter small price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"formGridState\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Medium Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: mediumPrice,\n              onChange: e => setmediumPrice(e.target.value),\n              placeholder: \"Enter medium price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"formGridZip\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Large Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: largePrice,\n              onChange: e => setlargePrice(e.target.value),\n              placeholder: \"Enter large price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: \"formGridPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: image,\n            onChange: e => setimage(e.target.value),\n            placeholder: \"Add Image URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formGridAddress1\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          value: description,\n          onChange: e => setdescription(e.target.value),\n          placeholder: \"Enter Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formGridAddress2\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          value: category,\n          onChange: e => setcategory(e.target.value),\n          placeholder: \"Enter Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Add New\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditPizza, \"y5WFH9DBfVccWuwf5uFjWoHwZc8=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = EditPizza;\nexport default EditPizza;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPizza\");","map":{"version":3,"sources":["/Users/amanrana/Desktop/Project1/pizza-shop/client/src/components/Admin/EditPizza.jsx"],"names":["React","useState","Form","Row","Col","Button","useEffect","useDispatch","useSelector","getPizzaById","Loader","Error","Success","EditPizza","match","name","setname","smallPrice","setsmallPrice","mediumPrice","setmediumPrice","largePrice","setlargePrice","image","setimage","description","setdescription","category","setcategory","getPizzaByState","state","getPizzaByIdReducer","loading","error","pizza","dispatch","submitForm","e","preventDefault","editedpizza","Prices","small","medium","large","console","log","_id","params","pizzaId","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Row, Col, Button } from \"react-bootstrap\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPizzaById } from \"../../action/pizzaAction\";\nimport Loader from \"../Loader\";\nimport Error from \"../Error\";\nimport Success from \"../Success\";\n\nconst EditPizza = ({ match }) => {\n  const [name, setname] = useState(\"\");\n  const [smallPrice, setsmallPrice] = useState();\n  const [mediumPrice, setmediumPrice] = useState();\n  const [largePrice, setlargePrice] = useState();\n  const [image, setimage] = useState(\"\");\n  const [description, setdescription] = useState(\"\");\n  const [category, setcategory] = useState(\"\");\n\n  const getPizzaByState = useSelector((state) => state.getPizzaByIdReducer);\n  const { loading, error, pizza } = getPizzaByState;\n\n  const dispatch = useDispatch();\n\n  const submitForm = (e) => {\n    e.preventDefault();\n    const editedpizza = {\n      name,\n      image,\n      description,\n      category,\n      Prices: {\n        small: smallPrice,\n        medium: mediumPrice,\n        large: largePrice,\n      },\n    };\n    console.log(pizza);\n    //dispatch(addPizzas(pizza));\n  };\n\n  useEffect(() => {\n      if (pizza._id === match.params.pizzaId) {\n          setname(pizza.name);\n      }else{\n        dispatch(getPizzaById(match.params.pizzaId));\n      }\n  }, [dispatch]);\n  return (\n    <div>\n      {loading && <Loader />}\n      {error && <Error error=\"add new pizza error\" />}\n      <Form onSubmit={submitForm}>\n        <Row className=\"mb-3\">\n          <Form.Group as={Col} controlId=\"formGridEmail\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              value={name}\n              onChange={(e) => setname(e.target.value)}\n              placeholder=\"Enter name\"\n            />\n          </Form.Group>\n          <Row className=\"mb-3\">\n            <Form.Group as={Col} controlId=\"formGridCity\">\n              <Form.Label>Small Price</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={smallPrice}\n                onChange={(e) => setsmallPrice(e.target.value)}\n                placeholder=\"Enter small price\"\n              />\n            </Form.Group>\n\n            <Form.Group as={Col} controlId=\"formGridState\">\n              <Form.Label>Medium Price</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={mediumPrice}\n                onChange={(e) => setmediumPrice(e.target.value)}\n                placeholder=\"Enter medium price\"\n              />\n            </Form.Group>\n\n            <Form.Group as={Col} controlId=\"formGridZip\">\n              <Form.Label>Large Price</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={largePrice}\n                onChange={(e) => setlargePrice(e.target.value)}\n                placeholder=\"Enter large price\"\n              />\n            </Form.Group>\n          </Row>\n\n          <Form.Group as={Col} controlId=\"formGridPassword\">\n            <Form.Label>Image</Form.Label>\n            <Form.Control\n              type=\"text\"\n              value={image}\n              onChange={(e) => setimage(e.target.value)}\n              placeholder=\"Add Image URL\"\n            />\n          </Form.Group>\n        </Row>\n\n        <Form.Group className=\"mb-3\" controlId=\"formGridAddress1\">\n          <Form.Label>Description</Form.Label>\n          <Form.Control\n            type=\"text\"\n            value={description}\n            onChange={(e) => setdescription(e.target.value)}\n            placeholder=\"Enter Description\"\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formGridAddress2\">\n          <Form.Label>Category</Form.Label>\n          <Form.Control\n            type=\"text\"\n            value={category}\n            onChange={(e) => setcategory(e.target.value)}\n            placeholder=\"Enter Category\"\n          />\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\">\n          Add New\n        </Button>\n      </Form>{\" \"}\n    </div>\n  );\n};\n\nexport default EditPizza;\n"]},"metadata":{},"sourceType":"module"}