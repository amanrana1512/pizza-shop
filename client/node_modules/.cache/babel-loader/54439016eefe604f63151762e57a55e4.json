{"ast":null,"code":"var _jsxFileName = \"/Users/amanrana/Desktop/Project1/pizza-shop/client/src/components/Admin/AddNewPizza.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form, Row, Col, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddNewPizza = () => {\n  _s();\n\n  const [name, setname] = useState(\"\");\n  const [smallPrice, setsmallPrice] = useState();\n  const [mediumPrice, setmediumPrice] = useState();\n  const [largePrice, setlargePrice] = useState();\n  const [image, setimage] = useState(\"\");\n  const [description, setdescription] = useState(\"\");\n  const [catefory, setcategory] = useState(\"\");\n\n  const submitForm = e => {\n    console.log(e);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitForm,\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: \"formGridEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: name,\n            onChange: e => setname(e.target.value),\n            placeholder: \"Enter name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"formGridCity\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Small Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: smallPrice,\n              onChange: e => setsmallPrice(e.target.value),\n              placeholder: \"Enter small price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"formGridState\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Medium Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: mediumPrice,\n              onChange: e => setmediumPrice(e.target.value),\n              placeholder: \"Enter medium price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"formGridZip\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Large Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: largePrice,\n              onChange: e => setlargePrice(e.target.value),\n              placeholder: \"Enter large price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: \"formGridPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: \"image\",\n            onChange: e => setimage(e.target.value),\n            placeholder: \"Image URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formGridAddress1\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          value: description,\n          onChange: e => setdescription(e.target.value),\n          placeholder: \"Enter Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formGridAddress2\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          value: category,\n          onChange: e => setcategory(e.target.value),\n          placeholder: \"Enter Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        children: \"Add New\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true);\n};\n\n_s(AddNewPizza, \"FlkuRmnFSANhAKbiJHLScWx8G1w=\");\n\n_c = AddNewPizza;\nexport default AddNewPizza;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNewPizza\");","map":{"version":3,"sources":["/Users/amanrana/Desktop/Project1/pizza-shop/client/src/components/Admin/AddNewPizza.jsx"],"names":["React","useState","Form","Row","Col","Button","AddNewPizza","name","setname","smallPrice","setsmallPrice","mediumPrice","setmediumPrice","largePrice","setlargePrice","image","setimage","description","setdescription","catefory","setcategory","submitForm","e","console","log","target","value","category"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Row, Col, Button } from \"react-bootstrap\";\n\nconst AddNewPizza = () => {\n  const [name, setname] = useState(\"\");\n  const [smallPrice, setsmallPrice] = useState();\n  const [mediumPrice, setmediumPrice] = useState();\n  const [largePrice, setlargePrice] = useState();\n  const [image, setimage] = useState(\"\");\n  const [description, setdescription] = useState(\"\");\n  const [catefory, setcategory] = useState(\"\");\n\n  const submitForm = (e) => {\n    console.log(e);\n  };\n  return (\n    <>\n      <Form onSubmit={submitForm}>\n        <Row className=\"mb-3\">\n          <Form.Group as={Col} controlId=\"formGridEmail\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              value={name}\n              onChange={(e) => setname(e.target.value)}\n              placeholder=\"Enter name\"\n            />\n          </Form.Group>\n          <Row className=\"mb-3\">\n            <Form.Group as={Col} controlId=\"formGridCity\">\n              <Form.Label>Small Price</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={smallPrice}\n                onChange={(e) => setsmallPrice(e.target.value)}\n                placeholder=\"Enter small price\"\n              />\n            </Form.Group>\n\n            <Form.Group as={Col} controlId=\"formGridState\">\n              <Form.Label>Medium Price</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={mediumPrice}\n                onChange={(e) => setmediumPrice(e.target.value)}\n                placeholder=\"Enter medium price\"\n              />\n            </Form.Group>\n\n            <Form.Group as={Col} controlId=\"formGridZip\">\n              <Form.Label>Large Price</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={largePrice}\n                onChange={(e) => setlargePrice(e.target.value)}\n                placeholder=\"Enter large price\"\n              />\n            </Form.Group>\n          </Row>\n\n          <Form.Group as={Col} controlId=\"formGridPassword\">\n            <Form.Label>Image</Form.Label>\n            <Form.Control\n              type=\"text\"\n              value=\"image\"\n              onChange={(e) => setimage(e.target.value)}\n              placeholder=\"Image URL\"\n            />\n          </Form.Group>\n        </Row>\n\n        <Form.Group className=\"mb-3\" controlId=\"formGridAddress1\">\n          <Form.Label>Description</Form.Label>\n          <Form.Control\n            type=\"text\"\n            value={description}\n            onChange={(e) => setdescription(e.target.value)}\n            placeholder=\"Enter Description\"\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formGridAddress2\">\n          <Form.Label>Category</Form.Label>\n          <Form.Control\n            type=\"text\"\n            value={category}\n            onChange={(e) => setcategory(e.target.value)}\n            placeholder=\"Enter Category\"\n          />\n        </Form.Group>\n\n        <Button variant=\"primary\">Add New</Button>\n      </Form>{\" \"}\n    </>\n  );\n};\n\nexport default AddNewPizza;\n"]},"metadata":{},"sourceType":"module"}